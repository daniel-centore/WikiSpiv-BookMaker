package com.wikispiv.bookmaker.ui;

import java.awt.Cursor;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

import javax.swing.JComboBox;
import javax.swing.JList;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import javax.swing.SwingUtilities;

import com.wikispiv.bookmaker.Main;
import com.wikispiv.bookmaker.Utils;
import com.wikispiv.bookmaker.drawables.AlignableDrawable;
import com.wikispiv.bookmaker.drawables.Drawable;
import com.wikispiv.bookmaker.drawables.SongChunkDrawable;
import com.wikispiv.bookmaker.enums.PageInsertPosition;
import com.wikispiv.bookmaker.enums.PageSide;
import com.wikispiv.bookmaker.tasks.ReloadSongs;

/**
 * THIS FILE MUST BE EDITED IN NETBEANS
 * 
 * @author dcentore
 */
public class BookMakerFrame extends javax.swing.JFrame implements PropertyChangeListener
{
    private static final long serialVersionUID = 1L;
    private final Main main;

    public BookMakerFrame(Main main)
    {
        this.main = main;
        initComponents();
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                Main.isClosing();
            }
        });
    }
    
    public Main getMain()
    {
        return this.main;
    }

    public void doingSomething(boolean yes)
    {
        sourceSongList.setEnabled(!yes);
        reloadSongsButton.setEnabled(!yes);
        filterSource.setEnabled(!yes);
        editPanel.setEnabled(!yes);
        saveBtn.setEnabled(!yes);
        openBtn.setEnabled(!yes);
        transliterateCheckbox.setEnabled(!yes);
        
        if (yes) {
            setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        } else {
            setCursor(null);
        }
    }
    
    public void somethingSelected(Drawable selectedDrawable)
    {
        boolean isSelected = selectedDrawable != null;
        
        titleAlignCombo.setEnabled(isSelected && selectedDrawable instanceof SongChunkDrawable);
        if (isSelected && selectedDrawable instanceof AlignableDrawable) {
            AlignableDrawable scd = (AlignableDrawable) selectedDrawable;
            titleAlignCombo.setSelectedIndex(scd.getAlign());
        }
    }
    
    public void print(String s)
    {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                // Here, we can safely update the GUI
                // because we'll be called from the
                // event dispatch thread
                console.append(s);
                console.setCaretPosition(console.getDocument().getLength());
            }
        });

        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        reloadProgressBar = new javax.swing.JProgressBar();
        filterSource = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        console = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        sourceSongList = new javax.swing.JList<>();
        saveBtn = new javax.swing.JButton();
        openBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        fileLabel = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        filterTextField = new javax.swing.JTextField();
        editPanel = new com.wikispiv.bookmaker.ui.EditPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        imageList = new javax.swing.JList<>();
        jLabel2 = new javax.swing.JLabel();
        showUsedCheckbox = new javax.swing.JCheckBox();
        SpinnerNumberModel pageSpinnerModel = new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 2);
        pageSpinner = new JSpinner(pageSpinnerModel);
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        incompleteSongList = new javax.swing.JList<>();
        alphButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        addPageL = new javax.swing.JButton();
        addPageC = new javax.swing.JButton();
        addPageR = new javax.swing.JButton();
        deleteLeftBtn = new javax.swing.JButton();
        deleteRightBtn = new javax.swing.JButton();
        jumpRightBtn = new javax.swing.JButton();
        jumpLeftBtn = new javax.swing.JButton();
        savePreviewBtn = new javax.swing.JButton();
        reloadSongsButton = new javax.swing.JButton();
        kapustaBtn = new javax.swing.JButton();
        SpinnerNumberModel firstPageSpinnerModel = new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 1);
        firstPageSpinner = new JSpinner(firstPageSpinnerModel);
        jLabel9 = new javax.swing.JLabel();
        titleAlignCombo = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        fontComboBox = new javax.swing.JComboBox<>();
        setFontBtn = new javax.swing.JButton();
        exportBtn = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        saveAsBtn = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        SpinnerNumberModel indentSizeSpinnerModel = new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 0.1);
        indentSizeSpinner = new JSpinner(indentSizeSpinnerModel);
        SpinnerNumberModel beforeLyricsSpinnerModel = new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 0.1);
        beforeLyricsSpinner = new JSpinner(beforeLyricsSpinnerModel);
        insertTextField = new javax.swing.JTextField();
        insertTextBtn = new javax.swing.JButton();
        onlyFittingCheckbox = new javax.swing.JCheckBox();
        indexBtn = new javax.swing.JButton();
        toBackBtn = new javax.swing.JButton();
        transliterateCheckbox = new javax.swing.JCheckBox();

        jButton4.setText("jButton4");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("WikiSpiv BookMaker");
        setMinimumSize(new java.awt.Dimension(1246, 640));

        jLabel1.setText("Songs:");

        filterSource.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        filterSource.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterSourceActionPerformed(evt);
            }
        });

        jLabel3.setText("Category:");

        console.setEditable(false);
        console.setColumns(20);
        console.setRows(5);
        jScrollPane3.setViewportView(console);

        sourceSongList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        sourceSongList.setDragEnabled(true);
        sourceSongList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                sourceSongListValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(sourceSongList);

        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        openBtn.setText("Open");
        openBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openBtnActionPerformed(evt);
            }
        });

        jLabel6.setText("Filename:");

        fileLabel.setText("<no file>");

        jLabel7.setText("Filter:");

        filterTextField.setToolTipText("");
        filterTextField.setEnabled(false);

        editPanel.setBackground(new java.awt.Color(153, 255, 255));

        javax.swing.GroupLayout editPanelLayout = new javax.swing.GroupLayout(editPanel);
        editPanel.setLayout(editPanelLayout);
        editPanelLayout.setHorizontalGroup(
            editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        editPanelLayout.setVerticalGroup(
            editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        imageList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        imageList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                imageListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(imageList);

        jLabel2.setText("Images:");

        showUsedCheckbox.setText("Show used");
        showUsedCheckbox.setEnabled(false);

        pageSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                pageSpinnerStateChanged(evt);
            }
        });

        jLabel5.setText("PageIdx:");
        jLabel5.setToolTipText("This is the 0-based index of the page to show in the preview pane");

        jLabel8.setText("Incomplete songs:");

        incompleteSongList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        incompleteSongList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                incompleteSongListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(incompleteSongList);

        alphButton.setText("Alphabetical");

        jButton1.setText("Randomize");

        addPageL.setText("AddL");
        addPageL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPageLActionPerformed(evt);
            }
        });

        addPageC.setText("AddC");
        addPageC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPageCActionPerformed(evt);
            }
        });

        addPageR.setText("AddR");
        addPageR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPageRActionPerformed(evt);
            }
        });

        deleteLeftBtn.setForeground(new java.awt.Color(255, 0, 0));
        deleteLeftBtn.setText("DeleteL");
        deleteLeftBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteLeftBtnActionPerformed(evt);
            }
        });

        deleteRightBtn.setForeground(new java.awt.Color(255, 0, 0));
        deleteRightBtn.setText("DeleteR");
        deleteRightBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteRightBtnActionPerformed(evt);
            }
        });

        jumpRightBtn.setText(">");
        jumpRightBtn.setToolTipText("");
        jumpRightBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jumpRightBtnActionPerformed(evt);
            }
        });

        jumpLeftBtn.setText("<");
        jumpLeftBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jumpLeftBtnActionPerformed(evt);
            }
        });

        savePreviewBtn.setText("Save Preview");
        savePreviewBtn.setToolTipText("This places the current preview thingy");
        savePreviewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePreviewBtnActionPerformed(evt);
            }
        });

        reloadSongsButton.setText("Reload songs");
        reloadSongsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reloadSongsButtonActionPerformed(evt);
            }
        });

        kapustaBtn.setText("Kapusta");
        kapustaBtn.setToolTipText("Don't push this");
        kapustaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kapustaBtnActionPerformed(evt);
            }
        });

        firstPageSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                firstPageSpinnerStateChanged(evt);
            }
        });

        jLabel9.setText("First page No:");
        jLabel9.setToolTipText("This is what page number we should show for page 0");

        titleAlignCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Left", "Center", "Right" }));
        titleAlignCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                titleAlignComboActionPerformed(evt);
            }
        });

        jLabel10.setText("Title:");

        fontComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Title", "Credits", "Chords", "Lyrics", "Instructions", "Cat Title", "Cat Subtitle", "Index Title", "Index", "Index Alt", "Page Num" }));

        setFontBtn.setText("Set Font");
        setFontBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                setFontBtnActionPerformed(evt);
            }
        });

        exportBtn.setText("Export");
        exportBtn.setToolTipText("Exports the current book as a pdf");
        exportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportBtnActionPerformed(evt);
            }
        });

        jLabel11.setText("Before lyrics:");

        saveAsBtn.setText("as...");
        saveAsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsBtnActionPerformed(evt);
            }
        });

        jButton2.setText("Page No");
        jButton2.setToolTipText("Inserts a page number onto the page");

        jLabel4.setText("Indent size:");

        jLabel12.setText("Between stanzas:");

        indentSizeSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                indentSizeSpinnerStateChanged(evt);
            }
        });

        beforeLyricsSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                beforeLyricsSpinnerStateChanged(evt);
            }
        });

        insertTextBtn.setText("Insert");
        insertTextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertTextBtnActionPerformed(evt);
            }
        });

        onlyFittingCheckbox.setText("Only fitting");
        onlyFittingCheckbox.setToolTipText("Only show songs which will fit inside the preview thingy");
        onlyFittingCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onlyFittingCheckboxActionPerformed(evt);
            }
        });

        indexBtn.setText("Index");
        indexBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                indexBtnActionPerformed(evt);
            }
        });

        toBackBtn.setText("to Back");
        toBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toBackBtnActionPerformed(evt);
            }
        });

        transliterateCheckbox.setText("D/Д");
        transliterateCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transliterateCheckboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel6)
                                .addComponent(saveBtn))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(fileLabel))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(6, 6, 6)
                                            .addComponent(jLabel1))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(showUsedCheckbox)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(onlyFittingCheckbox))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel7)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(filterTextField))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(filterSource, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(2, 2, 2)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(insertTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(21, 21, 21)
                                                    .addComponent(insertTextBtn))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(fontComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(setFontBtn))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(alphButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jButton1)))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel4))
                                        .addGap(21, 21, 21)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(indentSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(beforeLyricsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jButton2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(toBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)
                                .addComponent(jLabel8)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(jLabel10)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(titleAlignCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(transliterateCheckbox))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pageSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(firstPageSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(saveAsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(openBtn)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(exportBtn)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(reloadSongsButton))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel12)
                                    .addGap(100, 100, 100))
                                .addComponent(savePreviewBtn))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(kapustaBtn)
                                .addGap(14, 14, 14)
                                .addComponent(indexBtn)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jumpLeftBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addPageL, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)
                        .addComponent(deleteLeftBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 717, Short.MAX_VALUE)
                        .addComponent(jumpRightBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(editPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addPageC, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84)
                        .addComponent(deleteRightBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85)
                        .addComponent(addPageR))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(reloadProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(55, 55, 55))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                            .addComponent(jScrollPane4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(filterSource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(titleAlignCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(transliterateCheckbox))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(filterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(showUsedCheckbox)
                                    .addComponent(onlyFittingCheckbox))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(alphButton)
                                    .addComponent(jButton1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(fontComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(setFontBtn))
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(insertTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(insertTextBtn))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11)
                                    .addComponent(beforeLyricsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(2, 2, 2)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(indentSizeSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel12)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(kapustaBtn)
                                    .addComponent(indexBtn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButton2)
                                    .addComponent(toBackBtn))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(fileLabel)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addComponent(savePreviewBtn)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(saveBtn)
                            .addComponent(openBtn)
                            .addComponent(exportBtn)
                            .addComponent(reloadSongsButton)
                            .addComponent(saveAsBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(editPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(pageSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(firstPageSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addPageR)
                        .addComponent(jumpRightBtn)
                        .addComponent(deleteRightBtn)
                        .addComponent(addPageC))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jumpLeftBtn)
                        .addComponent(addPageL)
                        .addComponent(deleteLeftBtn)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reloadProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        Main.getSh().save(false);
    }//GEN-LAST:event_saveBtnActionPerformed

    private void openBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openBtnActionPerformed
        Main.getSh().open();
    }//GEN-LAST:event_openBtnActionPerformed

    private void addPageLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPageLActionPerformed
        main.pageAdded(PageInsertPosition.LEFT);
    }//GEN-LAST:event_addPageLActionPerformed

    private void addPageCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPageCActionPerformed
        main.pageAdded(PageInsertPosition.CENTER);
    }//GEN-LAST:event_addPageCActionPerformed

    private void addPageRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPageRActionPerformed
        main.pageAdded(PageInsertPosition.RIGHT);
    }//GEN-LAST:event_addPageRActionPerformed

    private void pageSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_pageSpinnerStateChanged
        main.pageSpinnerSet((int) pageSpinner.getValue());
    }//GEN-LAST:event_pageSpinnerStateChanged

    private void jumpRightBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jumpRightBtnActionPerformed
        main.pageSpinnerSet((int) pageSpinner.getValue() + 2);
    }//GEN-LAST:event_jumpRightBtnActionPerformed

    private void jumpLeftBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jumpLeftBtnActionPerformed
        main.pageSpinnerSet((int) pageSpinner.getValue() - 2);
    }//GEN-LAST:event_jumpLeftBtnActionPerformed

    private void deleteLeftBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteLeftBtnActionPerformed
        main.pageRemoved(PageSide.LEFT);
    }//GEN-LAST:event_deleteLeftBtnActionPerformed

    private void deleteRightBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteRightBtnActionPerformed
        main.pageRemoved(PageSide.RIGHT);
    }//GEN-LAST:event_deleteRightBtnActionPerformed

    private void savePreviewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePreviewBtnActionPerformed
        main.savePreviewPressed();
    }//GEN-LAST:event_savePreviewBtnActionPerformed

    private void reloadSongsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reloadSongsButtonActionPerformed
        ReloadSongs task = new ReloadSongs(this);
        task.addPropertyChangeListener(this);
        task.execute();
    }//GEN-LAST:event_reloadSongsButtonActionPerformed

    private void setFontBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_setFontBtnActionPerformed
        main.setFont(fontComboBox.getSelectedItem().toString());
    }//GEN-LAST:event_setFontBtnActionPerformed

    private void exportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportBtnActionPerformed
        Main.exportPdf();
    }//GEN-LAST:event_exportBtnActionPerformed

    private void titleAlignComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_titleAlignComboActionPerformed
        main.titleAlignmentChanged(titleAlignCombo.getSelectedIndex());
    }//GEN-LAST:event_titleAlignComboActionPerformed

    private void indentSizeSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_indentSizeSpinnerStateChanged
        Main.getPrefs().setIndentSize(Utils.getDoubleValue(indentSizeSpinner));
        Main.somethingChanged();
    }//GEN-LAST:event_indentSizeSpinnerStateChanged

    private void saveAsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsBtnActionPerformed
        Main.getSh().save(true);
    }//GEN-LAST:event_saveAsBtnActionPerformed

    private void beforeLyricsSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_beforeLyricsSpinnerStateChanged
        Main.getPrefs().setBeforeLyrics(Utils.getDoubleValue(beforeLyricsSpinner));
        Main.somethingChanged();
    }//GEN-LAST:event_beforeLyricsSpinnerStateChanged

    private void sourceSongListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_sourceSongListValueChanged
        main.previewChangedSong(sourceSongList.getSelectedValue());
    }//GEN-LAST:event_sourceSongListValueChanged

    private void incompleteSongListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_incompleteSongListValueChanged
        main.previewChangedSong(incompleteSongList.getSelectedValue());
    }//GEN-LAST:event_incompleteSongListValueChanged

    private void kapustaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kapustaBtnActionPerformed
        main.kapusta();
    }//GEN-LAST:event_kapustaBtnActionPerformed

    private void filterSourceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterSourceActionPerformed
        main.categoryFilterChanged((String) filterSource.getSelectedItem());
    }//GEN-LAST:event_filterSourceActionPerformed

    private void onlyFittingCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onlyFittingCheckboxActionPerformed
        main.onlyFittingChanged(onlyFittingCheckbox.isSelected());
    }//GEN-LAST:event_onlyFittingCheckboxActionPerformed

    private void firstPageSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_firstPageSpinnerStateChanged
        main.firstPageNumChanged((int) Utils.getDoubleValue(firstPageSpinner));
    }//GEN-LAST:event_firstPageSpinnerStateChanged

    private void indexBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_indexBtnActionPerformed
        main.indexBtnPushed();
    }//GEN-LAST:event_indexBtnActionPerformed

    private void imageListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_imageListValueChanged
        main.imageListValueChanged(imageList.getSelectedValue());
    }//GEN-LAST:event_imageListValueChanged

    private void toBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toBackBtnActionPerformed
        main.sendToBack();
    }//GEN-LAST:event_toBackBtnActionPerformed

    private void insertTextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertTextBtnActionPerformed
        main.insertText(insertTextField.getText(), (String) fontComboBox.getSelectedItem());
    }//GEN-LAST:event_insertTextBtnActionPerformed

    private void transliterateCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transliterateCheckboxActionPerformed
        main.transliterateChanged(transliterateCheckbox.isSelected());
    }//GEN-LAST:event_transliterateCheckboxActionPerformed

    public void setFirstPageNum(int firstPageNum)
    {
        if (firstPageNum != (int) Utils.getDoubleValue(firstPageSpinner)) {
            firstPageSpinner.setValue(firstPageNum);
        }
    }
    
    public void setOnlyFittingCheckbox(boolean onlyFitting)
    {
        if (onlyFitting != onlyFittingCheckbox.isSelected()) {
            onlyFittingCheckbox.setSelected(onlyFitting);
        }
    }
    
    public void setTransliterateCheckbox(boolean translit)
    {
        if (translit != transliterateCheckbox.isSelected()) {
            transliterateCheckbox.setSelected(translit);
        }
    }
    
    public JComboBox<String> getFilterSource()
    {
        return filterSource;
    }
    
    public void setIndentSizeSpinner(double val)
    {
        indentSizeSpinner.setValue(val);
    }
    
    public void setBeforeLyricsSpinner(double val)
    {
        beforeLyricsSpinner.setValue(val);
    }
    
    public void setPageSpinner(int value) {
        if (value != (int) pageSpinner.getValue()) {
            pageSpinner.setValue(value);
        }
    }
    
    public void updateCurrentFile(String s)
    {
        fileLabel.setText(s);
    }
    
    public JList<String> getSourceSongList()
    {
        return this.sourceSongList;
    }
    
    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        if ("progress".equals(evt.getPropertyName())) {
            int progress = (Integer) evt.getNewValue();
            reloadProgressBar.setValue(progress);
        } 
    }
    
    public EditPanel getEditPanel()
    {
        return (EditPanel) editPanel;
    }


    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPageC;
    private javax.swing.JButton addPageL;
    private javax.swing.JButton addPageR;
    private javax.swing.JButton alphButton;
    private javax.swing.JSpinner beforeLyricsSpinner;
    private javax.swing.JTextArea console;
    private javax.swing.JButton deleteLeftBtn;
    private javax.swing.JButton deleteRightBtn;
    private javax.swing.JPanel editPanel;
    private javax.swing.JButton exportBtn;
    private javax.swing.JLabel fileLabel;
    private javax.swing.JComboBox<String> filterSource;
    private javax.swing.JTextField filterTextField;
    private javax.swing.JSpinner firstPageSpinner;
    private javax.swing.JComboBox<String> fontComboBox;
    private javax.swing.JList<String> imageList;
    private javax.swing.JList<String> incompleteSongList;
    private javax.swing.JSpinner indentSizeSpinner;
    private javax.swing.JButton indexBtn;
    private javax.swing.JButton insertTextBtn;
    private javax.swing.JTextField insertTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton jumpLeftBtn;
    private javax.swing.JButton jumpRightBtn;
    private javax.swing.JButton kapustaBtn;
    private javax.swing.JCheckBox onlyFittingCheckbox;
    private javax.swing.JButton openBtn;
    private javax.swing.JSpinner pageSpinner;
    private javax.swing.JProgressBar reloadProgressBar;
    private javax.swing.JButton reloadSongsButton;
    private javax.swing.JButton saveAsBtn;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton savePreviewBtn;
    private javax.swing.JButton setFontBtn;
    private javax.swing.JCheckBox showUsedCheckbox;
    private javax.swing.JList<String> sourceSongList;
    private javax.swing.JComboBox<String> titleAlignCombo;
    private javax.swing.JButton toBackBtn;
    private javax.swing.JCheckBox transliterateCheckbox;
    // End of variables declaration//GEN-END:variables

    public javax.swing.JList<String> getIncompleteSongList()
    {
        return incompleteSongList;
    }

    public javax.swing.JList<String> getImageList()
    {
        return imageList;
    }
}
